% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ProteomicsExperiment.R
\name{ProteomicsExperiment-constructor}
\alias{ProteomicsExperiment-constructor}
\alias{ProteomicsExperiment}
\title{ProteomicsExperiment constructor}
\usage{
ProteomicsExperiment(ProteinExperiment, PeptideExperiment, colData,
  linkerDf, metadata, metaoptions = NULL, idColProt = NA,
  idColPept = NA, linkedSubset = TRUE, subsetMode = "protein",
  conditionCol = NA, timeCol = NA, proteinCol = NA)
}
\arguments{
\item{ProteinExperiment}{A \code{ProteinExperiment} object.}

\item{PeptideExperiment}{A \code{PeptideExperiment} object.}

\item{colData}{A \code{data.frame} with sample information like
conditions, replicates, etc. If not provided uses the colData slot from
the \code{ProteinExperiment} and \code{PeptideExperiment}.}

\item{linkerDf}{A \code{data.frame} output from \code{\link{buildLinkerDf}}.}

\item{metadata}{A \code{list} to store any kind of experiment-wide
data; like authors, dates, machines used... If not provided uses the metadata
from the \code{ProteinExperiment} and \code{PeptideExperiment}.}

\item{metaoptions}{A \code{list} to store user defined metaoptions.}

\item{idColProt}{A \code{character} indicating which column from the
rowData (protein) should be used as ids. Should be the same used in
\code{\link{buildLinkerDf}}.}

\item{idColPept}{A \code{character} indicating which column from the
rowData (peptide) should be used as ids. Should be the same used in
\code{\link{buildLinkerDf}}.}

\item{linkedSubset}{A \code{logical} if subsetting should be linked between
proteins and peptide.}

\item{subsetMode}{A \code{character}, either 'protein' or 'peptide'
indicating which level should be used first when subsetting.}

\item{conditionCol}{A \code{character}, which indicates the column name
in colData(x) that defines the different experiment conditions.}

\item{timeCol}{A \code{character}, which indicates the column name
in colData(x) that defines the different experiment timepoints.}

\item{proteinCol}{A \code{character}, which indicates the column name
in rowData(x) that defines to which protein a peptide is assigned.}
}
\value{
An object of class \code{ProteomicsExperiment}.
}
\description{
Constructor function for the ProteomicsExperiment class object.
It requires at minimum a \code{ProteinExperiment} and a
\code{PeptideExperiment}. If the colData, metadata and metaoptions have been
already defined in those it is not necessary to give them again.
}
\section{Class description}{

See \link{ProteomicsExperiment-class} for details.
}

\section{Accessors}{

See \link{ProteomicsExperiment-accessors} for details.
}

\examples{

## assays
assays_protein <- list(expression = matrix(1:9, ncol = 3))

## colData
colData <- data.frame(sample = c('A1', 'A2', 'A3'),
                      condition = c('A', 'A', 'A'),
                    time = c(1, 2, 3))
## rowData
rowData_protein <- data.frame(prot_id = LETTERS[1:3])

## construct the ProteinExperiment
protExp <- ProteinExperiment(assays = assays_protein,
                             rowData = rowData_protein,
                             colData = colData,
                             conditionCol = 'condition',
                             timeCol = 'time')

## assays
assays_peptide <- list(expression = matrix(1:15, ncol = 3))

## colData
colData <- data.frame(sample = c('A1', 'A2', 'A3'),
                      condition = c('A', 'A', 'A'),
                      time = c(1, 2, 3))
## rowData
rowData_peptide <- data.frame(pept_id = letters[1:5],
                              prot_id = c('A', 'A', 'B', 'C', 'C'))
## construct the ProteinExperiment
peptExp <- PeptideExperiment(assays = assays_peptide,
                             rowData = rowData_peptide,
                             colData = colData,
                             conditionCol = 'condition',
                             timeCol = 'time')

## list with the relationships
protein_to_peptide <- list(A = c('a', 'b'), B = c('c'), C = c('d', 'e'))
## function to build the data.frame
linkerDf <- buildLinkerDf(protIDs = LETTERS[1:3],
                          pepIDs  = letters[1:5],
                          protToPep = protein_to_peptide)

ProteomicsExp <- ProteomicsExperiment(ProteinExperiment = protExp,
                                      PeptideExperiment = peptExp,
                                      linkerDf = linkerDf)

}
