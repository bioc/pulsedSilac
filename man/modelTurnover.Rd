% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modelturnover.R
\name{modelTurnover}
\alias{modelTurnover}
\alias{modelTurnover,SilacProteinExperiment-method}
\alias{modelTurnover,SilacPeptideExperiment-method}
\alias{modelTurnover,SilacProteomicsExperiment-method}
\title{Estimate protein/peptide turnover}
\usage{
modelTurnover(x, ...)

\S4method{modelTurnover}{SilacProteinExperiment}(
  x,
  assayName = "fraction",
  formula = "fraction ~ 1-exp(-k*t)",
  start = list(k = 0.02),
  robust = FALSE,
  mode = "protein",
  verbose = FALSE,
  returnModel = FALSE,
  conditionCol,
  timeCol,
  silent = TRUE,
  ...
)

\S4method{modelTurnover}{SilacPeptideExperiment}(
  x,
  assayName = "fraction",
  formula = "fraction ~ 1-exp(-k*t)",
  start = list(k = 0.02),
  robust = FALSE,
  mode = c("grouped", "peptide"),
  verbose = FALSE,
  returnModel = FALSE,
  conditionCol,
  timeCol,
  proteinCol,
  silent = TRUE,
  ...
)

\S4method{modelTurnover}{SilacProteomicsExperiment}(
  x,
  assayName = "fraction",
  formula = "fraction ~ 1-exp(-k*t)",
  start = list(k = 0.02),
  robust = FALSE,
  mode = c("protein", "grouped", "peptide"),
  verbose = FALSE,
  returnModel = FALSE,
  conditionCol,
  timeCol,
  proteinCol,
  silent = TRUE,
  ...
)
}
\arguments{
\item{x}{A \code{SilacProteinExperiment}, \code{SilacPeptideExperiment} or
\code{SilacProteomicsExperiment} object.}

\item{...}{further parameters passed into \code{nls} or \code{nlrob}.}

\item{assayName}{\code{character} indicating which assay to use as data
input for the model.}

\item{formula}{\code{formula} to be used. Time must always be named "t" and
the data must be named "fraction".}

\item{start}{named \code{list} with the initical values for the parameters
in formula.}

\item{robust}{\code{logical} indicating if robust modelling from the
\code{robustbase} package should be used.}

\item{mode}{\code{character} indicating which type of data should be used.
Can be "protein": one model per protein; "grouped": one model per protein
using peptide data; "peptide" one model per peptide.}

\item{verbose}{\code{logical} indicating if a progress bar should be
printed.}

\item{returnModel}{\code{logical} indicating if the model objects should
be returned also in the output.}

\item{conditionCol}{\code{character} indicating which column of colData(x)
describes the conditions.}

\item{timeCol}{\code{character} indicating which column of colData(x)
describes time.}

\item{silent}{\code{logical} indicating if the errors given by nls/nlrob
should be printed.}

\item{proteinCol}{\code{character} indicating which column of rowData(x)
describes the assigned protein to a peptide. (Only for peptide data)}
}
\value{
A named \code{list} with either model metrics in matrices or the
model objects.
}
\description{
Method to apply turnover models on protein/peptide data
}
\details{
The nls and nlrob functions have many arguments that can be tunned
for parameter fitting. Unfortunately, not all the possible argument
combinations have been tested. It is recommended to first test one model
with the desired parameters with silent = FALSE to see that it runs smoothly
and then run the whole proteome with silent = TRUE to supress failed
convergence errors. For example, some methods for nlrob use upper and lower
bounds instead of start.

Please open an issue on github if the function is having trouble with a
particular argument.

For robust modelling the method 'CM' and 'mtl' are not yet supported.
}
\examples{
data('wormsPE')
wormsPE <- calculateIsotopeFraction(wormsPE, ratioAssay = 'ratio')

modelList <- modelTurnover(x = wormsPE[1:10],
                           assayName = 'fraction',
                           formula = 'fraction ~ 1 - exp(-k*t)',
                           start = list(k = 0.02),
                           mode = 'protein',
                           robust = FALSE,
                           returnModel = TRUE,
                           silent = TRUE)

}
